import React from 'react';
import {Clock} from 'lucide-react';
import {
    Accordion,
    AccordionContent,
    AccordionItem,
    AccordionTrigger,
} from "@/shared/ui/shadcn/accordion";
import {MaxWidthLayout} from "@/shared/ui/MaxWidthLayout";

interface AboutSectionProps {
    description: {
        id: number;
        title: string;
        content: string;
    }[];
    features?: { id: string; icon: string; title: string }[];
    amenities?: { id: number; title: string }[];
    specializations?: string[];
    procedures?: string[];
}

function getAmenityIcon(title: string): string {
    const iconMap: { [key: string]: string } = {
        '–°—Ç–∞—Ü–∏–æ–Ω–∞—Ä': 'üè•',
        '–ü—Ä–∏–µ–º –∞–Ω–∞–ª–∏–∑–æ–≤': 'üß™',
        '–ë–æ–ª—å–Ω–∏—á–Ω—ã–π': 'üìã',
        '–î–ª—è –¥–µ—Ç–µ–π': 'üë∂',
        'WiFi': 'üì∂',
        '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞': 'üî¨',
        '–î–µ—Ç—Å–∫–∞—è –∑–æ–Ω–∞': 'üéÆ',
        '–ê–ø—Ç–µ–∫–∞': 'üíä',
        '–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ': '‚è∞',
        '–ü–∞—Ä–∫–æ–≤–∫–∞': 'üÖøÔ∏è',
        '–ö–∞—Ä—Ç–æ—á–∫–∏': 'üí≥',
    };

    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∏–∫–æ–Ω–∫—É –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    for (const [key, icon] of Object.entries(iconMap)) {
        if (title.toLowerCase().includes(key.toLowerCase())) {
            return icon;
        }
    }

    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—â—É—é –∏–∫–æ–Ω–∫—É
    return '‚úÖ';
}

export const AboutSection: React.FC<AboutSectionProps> = ({
                                                              description,
                                                              features = [],
                                                              amenities = [],
                                                              specializations = [],
                                                              procedures = []
                                                          }) => {
    const [showAllSpecs, setShowAllSpecs] = React.useState(false);
    const [showAllProcedures, setShowAllProcedures] = React.useState(false);
    // –ï—Å–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ API –∫–∞–∫ –º–∞—Å—Å–∏–≤ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤, –æ–±—ä–µ–¥–∏–Ω—è–µ–º –∏—Ö
    const descriptionText = Array.isArray(description) && description.length > 0
        ? description.map(fragment => fragment.content || '').join(' ')
        : ''; // (–º)

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ amenities –∏–ª–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏/–º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const featuresToShow = amenities.map(amenity => ({
        id: `amenity-${amenity.id}`,
        icon: getAmenityIcon(amenity.title), // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –∏–∫–æ–Ω–∫–∏
        title: amenity.title
    }))


    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É–¥–æ–±—Å—Ç–≤–∞

    // –û–±—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –∏ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–π
    const AccordionSection = () => (
        <Accordion type="multiple" className="w-full" defaultValue={["specializations", "services", "about"]}>
            <AccordionItem value="about" className="border-b">
                <AccordionTrigger className="hover:no-underline group">
                    <h2 className="text-xl font-medium group-data-[state=open]:text-emerald-600">–û –∫–ª–∏–Ω–∏–∫–µ</h2>
                </AccordionTrigger>
                <AccordionContent>
                    <div className="space-y-4">
                        <p className="text-gray-600">
                            {descriptionText}
                        </p>
                        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                            {featuresToShow.map((feature) => (
                                <div key={feature.id} className="flex items-center gap-2">
                                    <span className="text-xl">{feature.icon}</span>
                                    <span className="text-sm text-gray-600">{feature.title}</span>
                                </div>
                            ))}
                        </div>
                    </div>
                </AccordionContent>
            </AccordionItem>

            <AccordionItem value="specializations" className="border-b">
                <AccordionTrigger className="hover:no-underline group">
                    <h2 className="text-xl font-medium group-data-[state=open]:text-emerald-600">–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏</h2>
                </AccordionTrigger>
                <AccordionContent>
                    <div className="flex flex-wrap gap-2">
                        {specializations.slice(0, showAllSpecs ? undefined : 10).map((spec, index) => (
                            <button
                                key={index}
                                className="px-4 py-2 bg-gray-50 hover:bg-gray-100 rounded-full
                     text-sm text-gray-600 transition-colors"
                            >
                                {spec}
                            </button>
                        ))}
                        {specializations.length > 10 && (
                            <div
                                onClick={(e) => {
                                    e.preventDefault();
                                    e.stopPropagation();
                                    setShowAllSpecs(!showAllSpecs);
                                }}
                                className="px-4 py-2 bg-gray-50 hover:bg-gray-100 rounded-full
                           text-sm text-emerald-600 transition-colors cursor-pointer"
                            >
                                {showAllSpecs ? '–°–∫—Ä—ã—Ç—å' : '–ï—â—ë...'}
                            </div>
                        )}
                    </div>
                </AccordionContent>
            </AccordionItem>

            <AccordionItem value="services" className="border-b">
                <AccordionTrigger className="hover:no-underline group">
                    <h2 className="text-xl font-medium group-data-[state=open]:text-emerald-600">–£—Å–ª—É–≥–∏</h2>
                </AccordionTrigger>
                <AccordionContent>
                    <div className="flex flex-wrap gap-2">
                        {procedures.slice(0, showAllProcedures ? undefined : 8).map((service, index) => (
                            <button
                                key={index}
                                className="px-4 py-2 bg-gray-50 hover:bg-gray-100 rounded-full
                     text-sm text-gray-600 transition-colors"
                            >
                                {service}
                            </button>
                        ))}
                        {procedures.length > 8 && (
                            <div
                                onClick={(e) => {
                                    e.preventDefault();
                                    e.stopPropagation();
                                    setShowAllProcedures(!showAllProcedures);
                                }}
                                className="px-4 py-2 bg-gray-50 hover:bg-gray-100 rounded-full
                           text-sm text-emerald-600 transition-colors cursor-pointer"
                            >
                                {showAllProcedures ? '–°–∫—Ä—ã—Ç—å' : '–ï—â—ë...'}
                            </div>
                        )}
                    </div>
                </AccordionContent>
            </AccordionItem>
        </Accordion>
    );

    return (
        <MaxWidthLayout>
            <AccordionSection/>
        </MaxWidthLayout>
    );
};
